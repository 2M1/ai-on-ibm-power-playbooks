# Actually Build milvus
#
# This playbook first downloads milvus and the patch for POWER, applies the patch and then builds Milvus
# using cmake and conan. Afterwards the milvus binaries can be found at {{ milvus_dir }}/bin. Which will be
# automatically added to the $PATH variable by the `install_build_env` playbook.
#
# Parameters
# - ansible_user (string):  The login user for ansible which will also run milvus
# - milvus_dir (string/path): The path to the milvus directory
# - milvus_version (string):  The version of milvus to build
# - milvus_patch_version (string):  The version of the milvus patch to apply (must be compatible, but may be older)
# - conda_dir (string/path):        The path for all Conda/Mamba environments (MAMBA_ROOT_PREFIX)
# - nproc (integer):                The number of threads to use for building milvus.
---
- name: Install Milvus
  hosts: techzone
  tasks:

   - name: Create Milvus directory
     ansible.builtin.file:
      path: "{{ milvus_dir }}/"
      state: directory
      mode: u=rwx,g=rwx,o=rx
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"

   - name: Set permissions for Milvus dir # somehow mode 755 in ansible is not readable?
     become: true
     become_user: root
     ansible.builtin.command:
      cmd: chmod 755 {{ milvus_dir }}

   - name: Get Existing milvus Download
     ansible.builtin.stat:
      path: "{{ milvus_dir }}/gitrepo"
     register: milvus_stat


   - name: Download Milvus Source
     ansible.builtin.git:
      repo: https://github.com/milvus-io/milvus.git
      single_branch: true
      version: v{{ milvus_version }}
      dest: "{{ milvus_dir }}/gitrepo"
     when: not milvus_stat.stat.exists

   - name: Download Milvus patch
     ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/ppc64le/build-scripts/master/m/milvus/milvus-v{{ milvus_patch_version }}.patch
      dest: "{{ milvus_dir }}/milvus.patch"
      mode: u+rw
      owner: "{{ ansible_user }}"
     when: not milvus_stat.stat.exists

   - name: Apply patch
     ansible.builtin.command:
      cmd: git apply ../milvus.patch
      chdir: "{{ milvus_dir }}/gitrepo"
     when: not milvus_stat.stat.exists

   # NOTE: Apply MCPU not yet supported (was defaulting to false anyways.)
   # Requires milvus_install micromamba environment

   - name: Run Build
     ansible.builtin.shell:
      cmd: micromamba run --root-prefix={{ conda_dir }} -n milvus_install make -j{{ nproc }}
      chdir: "{{ milvus_dir }}/gitrepo"
     register: build_command
     failed_when: false

   - name: Patch rust crates
     when: build_command.rc != 0
     ansible.builtin.shell:
      cmd: cargo update -p time
      chdir: "{{ milvus_dir }}/gitrepo/internal/core/thirdparty/tantivy/tantivy-binding/"

   - name: Rerun Build
     ansible.builtin.shell:
      # NOTE: This is a quite extensive build process. Increasing memory helps. Running to many cores results in make getting killed
      #       by the OOM killer :).
      cmd: micromamba run --root-prefix={{ conda_dir }} -n milvus_install make -j{{ nproc }}
      chdir: "{{ milvus_dir }}/gitrepo"
     when: build_command.rc != 0
     register: build_res
     retries: 5                   # will try to build milvus 5 times, if it gets killed prematurely. This should be enought due
                                  # to incremental building.
     until: build_res.rc == 0

   - name: Copy Binaries
     ansible.builtin.copy:
      src: "{{ milvus_dir }}/gitrepo/bin/"
      dest: "{{ milvus_dir }}/bin/"
      remote_src: true
      mode: u+x

   - name: Copy Configs
     ansible.builtin.copy:
      src: "{{ milvus_dir }}/gitrepo/configs/"
      dest: "{{ milvus_dir }}/configs/"
      remote_src: true
      mode: u+x

   - name: Copy Libraries (64bit)
     ansible.builtin.copy:
      src: "{{ milvus_dir }}/gitrepo/internal/core/output/lib64/"
      dest: "{{ milvus_dir }}/lib/"
      remote_src: true
      mode: u+rx

   - name: Copy Libraries
     ansible.builtin.copy:
      src: "{{ milvus_dir }}/gitrepo/internal/core/output/lib/"
      dest: "{{ milvus_dir }}/lib/"
      remote_src: true
      mode: u+rx
